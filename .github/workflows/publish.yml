name: Publish to release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build (x86_64, Windows & Linux, Gnu)
        run: cargo build --release --target {{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-gnu' || 'x86_64-unknown-linux-gnu' }}
      - name: Build (i686, Windows & Linux, Gnu)
        run: cargo build --release --target {{ matrix.os == 'windows-latest' && 'i686-pc-windows-gnu' || 'i686-unknown-linux-gnu' }}
      - name: Build (x86_64, Linux, Musl)
        run: cargo build --release --target x86_64-unknown-linux-musl
      - name: Build (i686, Linux, Musl)
        run: cargo build --release --target i686-unknown-linux-musl
      - name: Build (x86_64, Windows, Msvc)
        if: matrix.os == 'windows-latest'
        run: cargo build --release --target x86_64-pc-windows-msvc
      - name: Build (i686, Windows, Msvc)
        if: matrix.os == 'windows-latest'
        run: cargo build --release --target i686-pc-windows-msvc
      - name: Package
        run: |
      - name: Package
        run: |
          tar -czvf target/release/ruuid-${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-gnu' || 'x86_64-unknown-linux-gnu' }}.tar.gz -C target/x86_64-unknown-linux-gnu/release/ ruuid
          tar -czvf target/release/ruuid-${{ matrix.os == 'windows-latest' && 'i686-pc-windows-gnu' || 'i686-unknown-linux-gnu' }}.tar.gz -C target/i686-unknown-linux-gnu/release/ ruuid
          tar -czvf target/release/ruuid-${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || 'x86_64-unknown-linux-gnu' }}.tar.gz -C target/x86_64-pc-windows-msvc/release/ ruuid.exe
          tar -czvf target/release/ruuid-${{ matrix.os == 'windows-latest' && 'i686-pc-windows-msvc' || 'i686-unknown-linux-gnu' }}.tar.gz -C target/i686-pc-windows-msvc/release/ ruuid.exe
      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: |
            target/release/ruuid-${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-gnu' || 'x86_64-unknown-linux-gnu' }}.tar.gz
            target/release/ruuid-${{ matrix.os == 'windows-latest' && 'i686-pc-windows-gnu' || 'i686-unknown-linux-gnu' }}.tar.gz
            target/release/ruuid-${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || 'x86_64-unknown-linux-gnu' }}.tar.gz
            target/release/ruuid-${{ matrix.os == 'windows-latest' && 'i686-pc-windows-msvc' || 'i686-unknown-linux-gnu' }}.tar.gz
          make_latest: false
